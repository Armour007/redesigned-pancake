{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "DB: up (local)",
			"type": "shell",
			"command": "docker compose -f docker-compose.yml up -d db",
			"problemMatcher": []
		},
		{
			"label": "DB: down (local)",
			"type": "shell",
			"command": "docker compose -f docker-compose.yml down",
			"problemMatcher": []
		},
		{
			"label": "Backend: go run :8081",
			"type": "shell",
			"command": "go run ./cmd/server",
			"options": {
				"cwd": "${workspaceFolder}/backend",
				"env": {
					"PORT": "8081",
					"AURA_FRONTEND_BASE_URL": "http://localhost:5173",
					"AURA_API_BASE_URL": "http://localhost:8081",
					"JWT_SECRET": "dev_jwt_secret_123",
					"DB_HOST": "localhost",
					"DB_PORT": "5432",
					"DB_USER": "aura_user",
					"DB_PASSWORD": "your_strong_password",
					"DB_NAME": "aura_db",
					"DB_SSLMODE": "disable",
					"SMTP_HOST": "",
					"SMTP_PORT": "",
					"SMTP_USER": "",
					"SMTP_PASS": "",
					"SMTP_FROM": ""
				}
			},
			"isBackground": true,
			"problemMatcher": []
		},
		{
			"label": "Frontend: npm run dev",
			"type": "shell",
			"command": "npm run dev",
			"options": {
				"cwd": "${workspaceFolder}/frontend"
			},
			"isBackground": true,
			"problemMatcher": []
		},
		{
			"label": "Dev: Start All (local)",
			"type": "shell",
			"command": "powershell -NoProfile -ExecutionPolicy Bypass -File ${workspaceFolder}/scripts/dev-start-local.ps1",
			"problemMatcher": []
		},
		{
			"label": "Dev: Compose up (dev)",
			"type": "shell",
			"command": "docker compose -f docker-compose.dev.yml up --build",
			"problemMatcher": []
		},
		{
			"label": "Dev: Compose down (dev)",
			"type": "shell",
			"command": "docker compose -f docker-compose.dev.yml down -v",
			"problemMatcher": []
		},
		{
			"label": "Backend: smoke test",
			"type": "shell",
			"command": "powershell -NoProfile -ExecutionPolicy Bypass -File ${workspaceFolder}/scripts/backend-smoke.ps1",
			"problemMatcher": []
		},
		{
			"label": "Backend: smoke test",
			"type": "shell",
			"command": "powershell -NoProfile -ExecutionPolicy Bypass -File ${workspaceFolder}/scripts/backend-smoke.ps1"
		},
		{
			"label": "Backend: go run :8081 (signing)",
			"type": "shell",
			"command": "go run ./cmd/server",
			"args": [],
			"options": {
				"cwd": "${workspaceFolder}/backend",
				"env": {
					"PORT": "8081",
					"AURA_FRONTEND_BASE_URL": "http://localhost:5173",
					"AURA_API_BASE_URL": "http://localhost:8081",
					"JWT_SECRET": "dev_jwt_secret_123",
					"DB_HOST": "localhost",
					"DB_PORT": "5432",
					"DB_USER": "aura_user",
					"DB_PASSWORD": "your_strong_password",
					"DB_NAME": "aura_db",
					"DB_SSLMODE": "disable",
					"AURA_DOWNLOAD_SIGNING_KEY": "dev_signing_key_123"
				}
			},
			"isBackground": true,
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "Backend: run unit tests api jwks",
			"type": "shell",
			"command": "go test ./internal/api -run ^Test(OrgJWKS|VerifyEdDSA)_ -v",
			"args": [],
			"isBackground": false,
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "SDK: codegen smoke",
			"type": "shell",
			"command": "powershell -NoProfile -ExecutionPolicy Bypass -File ${workspaceFolder}/scripts/sdk-codegen-smoke.ps1",
			"group": "test"
		},
		{
			"label": "Signed: download smoke",
			"type": "shell",
			"command": "powershell -NoProfile -ExecutionPolicy Bypass -File ${workspaceFolder}/scripts/signed-download-smoke.ps1",
			"group": "test"
		},
		{
			"label": "Backend: go run :8081 (jwt)",
			"type": "shell",
			"command": "go run ./cmd/server",
			"args": [],
			"isBackground": true,
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "Backend: go run :8081 (jwt)",
			"type": "shell",
			"command": "go run ./cmd/server",
			"args": [],
			"isBackground": true,
			"group": "build"
		},
		{
			"label": "Backend: go run :8081 (jwt)",
			"type": "shell",
			"command": "go run ./cmd/server",
			"isBackground": true
		},
		{
			"label": "Backend: go run :8081 (jwt)",
			"type": "shell",
			"command": "go run ./cmd/server",
			"isBackground": true
		},
		{
			"label": "Backend: go run :8081 (local-db)",
			"type": "shell",
			"command": "go run ./cmd/server",
			"isBackground": true
		}
	]
}