{
	"components": {
		"parameters": {
			"AURAVersion": {
				"description": "Optional API version header. Defaults to 2025-10-01.",
				"in": "header",
				"name": "AURA-Version",
				"required": false,
				"schema": { "example": "2025-10-01", "type": "string" }
			},
			"IdempotencyKey": {
				"description": "Provide for POST mutations to safely retry. First 2xx response is cached for 24h.",
				"in": "header",
				"name": "Idempotency-Key",
				"required": false,
				"schema": { "example": "req_6a84c5e9e2a14d0a", "type": "string" }
			}
		},
		"schemas": {
			"APIKeyInfo": {
				"properties": {
					"expires_at": { "format": "date-time", "nullable": true, "type": "string" },
					"id": { "format": "uuid", "type": "string" },
					"key_prefix": { "type": "string" },
					"last_used_at": { "format": "date-time", "nullable": true, "type": "string" },
					"name": { "type": "string" }
				},
				"type": "object"
			},
			"Agent": {
				"properties": {
					"created_at": { "format": "date-time", "type": "string" },
					"description": { "type": "string" },
					"id": { "format": "uuid", "type": "string" },
					"name": { "type": "string" }
				},
				"type": "object"
			},
			"EventLog": {
				"properties": {
					"agent_id": { "format": "uuid", "nullable": true, "type": "string" },
					"api_key_prefix_used": { "nullable": true, "type": "string" },
					"decision": { "type": "string" },
					"decision_reason": { "nullable": true, "type": "string" },
					"event_type": { "type": "string" },
					"id": { "format": "uuid", "type": "string" },
					"organization_id": { "format": "uuid", "type": "string" },
					"status_code": { "nullable": true, "type": "integer" },
					"timestamp": { "format": "date-time", "type": "string" }
				},
				"type": "object"
			},
			"LoginRequest": {
				"properties": {
					"email": { "format": "email", "type": "string" },
					"password": { "format": "password", "type": "string" }
				},
				"type": "object"
			},
			"Organization": {
				"properties": {
					"created_at": { "format": "date-time", "type": "string" },
					"description": { "type": "string" },
					"id": { "format": "uuid", "type": "string" },
					"name": { "type": "string" }
				},
				"type": "object"
			},
			"Permission": {
				"properties": {
					"action": { "type": "string" },
					"created_at": { "format": "date-time", "type": "string" },
					"id": { "format": "uuid", "type": "string" },
					"is_active": { "type": "boolean" },
					"resource": { "type": "string" }
				},
				"type": "object"
			},
			"RegisterRequest": {
				"properties": {
					"email": { "format": "email", "type": "string" },
					"password": { "format": "password", "type": "string" }
				},
				"type": "object"
			},
			"User": {
				"properties": {
					"email": { "format": "email", "type": "string" },
					"id": { "format": "uuid", "type": "string" }
				},
				"type": "object"
			},
			"VerifyRequest": {
				"properties": {
					"action": { "type": "string" },
					"agent_id": { "format": "uuid", "type": "string" },
					"organization_id": { "format": "uuid", "type": "string" },
					"request_context": { "additionalProperties": true, "type": "object" },
					"resource": { "type": "string" }
				},
				"type": "object"
			},
			"VerifyResponse": {
				"properties": { "decision": { "enum": ["ALLOWED", "DENIED"], "type": "string" }, "reason": { "type": "string" } },
				"type": "object"
			},
			"WebhookEndpoint": {
				"properties": {
					"created_at": { "format": "date-time", "type": "string" },
					"id": { "format": "uuid", "type": "string" },
					"is_active": { "type": "boolean" },
					"url": { "format": "uri", "type": "string" }
				},
				"type": "object"
			},
			"JWK": {
				"properties": { "alg": { "type": "string" }, "crv": { "type": "string" }, "kid": { "type": "string" }, "kty": { "type": "string" }, "use": { "type": "string" }, "x": { "type": "string" } },
				"required": ["kty", "x"],
				"type": "object"
			},
			"JWKS": {
				"properties": { "keys": { "items": { "$ref": "#/components/schemas/JWK" }, "type": "array" } },
				"required": ["keys"],
				"type": "object"
			},
			"PublicRegistryOrg": {
				"properties": { "created_at": { "type": "string" }, "domain": { "type": "string" }, "id": { "type": "string" }, "jwks_url": { "type": "string" }, "name": { "type": "string" }, "org_id": { "type": "string" }, "status": { "type": "string" } },
				"type": "object"
			},
			"PublicRegistryOrgList": {
				"properties": { "items": { "items": { "$ref": "#/components/schemas/PublicRegistryOrg" }, "type": "array" }, "limit": { "type": "integer" }, "page": { "type": "integer" } },
				"type": "object"
			},
			"PublicRegistryAgent": {
				"properties": { "agent_id": { "type": "string" }, "created_at": { "type": "string" }, "id": { "type": "string" }, "last_seen_at": { "type": "string" }, "name": { "type": "string" }, "org_id": { "type": "string" }, "status": { "type": "string" } },
				"type": "object"
			},
			"PublicRegistryAgentList": {
				"properties": { "items": { "items": { "$ref": "#/components/schemas/PublicRegistryAgent" }, "type": "array" }, "limit": { "type": "integer" }, "page": { "type": "integer" } },
				"type": "object"
			},
			"TrustKeyAdmin": {
				"type": "object",
				"properties": {
					"id": { "type": "string", "format": "uuid" },
					"kid": { "type": "string" },
					"active": { "type": "boolean" },
					"created_at": { "type": "string", "format": "date-time" },
					"deactivate_after": { "type": "string", "format": "date-time", "nullable": true }
				}
			}
		},
		"securitySchemes": {
			"apiKeyAuth": { "in": "header", "name": "X-API-Key", "type": "apiKey" },
			"bearerAuth": { "bearerFormat": "JWT", "scheme": "bearer", "type": "http" }
		}
	},
	"info": { "title": "AURA API", "version": "1.0.0" },
	"openapi": "3.0.3",
	"paths": {
		"/.well-known/aura-jwks.json": { "get": { "responses": { "200": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JWKS" } } }, "description": "OK" } }, "summary": "Public JWKS" } },
		"/.well-known/aura/{orgId}/jwks.json": { "get": { "parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } } ], "responses": { "200": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JWKS" } } }, "description": "OK" } }, "summary": "Org-scoped JWKS" } },
		"/registry/public/orgs": { "get": { "parameters": [ { "in": "query", "name": "limit", "required": false, "schema": { "default": 50, "minimum": 1, "type": "integer" } }, { "in": "query", "name": "page", "required": false, "schema": { "default": 1, "minimum": 1, "type": "integer" } } ], "responses": { "200": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PublicRegistryOrgList" } } }, "description": "OK" } }, "summary": "Public registry: organizations" } },
		"/registry/public/agents": { "get": { "parameters": [ { "in": "query", "name": "limit", "required": false, "schema": { "default": 50, "minimum": 1, "type": "integer" } }, { "in": "query", "name": "page", "required": false, "schema": { "default": 1, "minimum": 1, "type": "integer" } }, { "in": "query", "name": "org_id", "required": false, "schema": { "format": "uuid", "type": "string" } } ], "responses": { "200": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PublicRegistryAgentList" } } }, "description": "OK" } }, "summary": "Public registry: agents" } },
		"/auth/login": { "post": { "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LoginRequest" } } }, "required": true }, "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }, "summary": "Login user" } },
		"/auth/register": { "post": { "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RegisterRequest" } } }, "required": true }, "responses": { "201": { "description": "Created" }, "400": { "description": "Bad Request" } }, "summary": "Register user" } },
		"/healthz": { "get": { "responses": { "200": { "description": "OK" } }, "summary": "Liveness" } },
		"/me": { "get": { "responses": { "200": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } }, "description": "OK" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Get current user" }, "put": { "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Update current user" } },
		"/me/password": { "put": { "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Change password" } },
		"/organizations/mine": { "get": { "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "List my organizations (JWT)" } },
		"/organizations/{orgId}": { "get": { "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" }, "404": { "description": "Not Found" } }, "security": [ { "bearerAuth": [] } ], "summary": "Get org" }, "parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } } ], "put": { "parameters": [ { "$ref": "#/components/parameters/AURAVersion" } ], "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Update org" } },
		"/organizations/{orgId}/agents": { "get": { "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "List agents" }, "parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } } ], "post": { "parameters": [ { "$ref": "#/components/parameters/IdempotencyKey" }, { "$ref": "#/components/parameters/AURAVersion" } ], "responses": { "201": { "description": "Created" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Create agent" } },
		"/organizations/{orgId}/agents/{agentId}": { "delete": { "responses": { "204": { "description": "No Content" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Delete agent" }, "get": { "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" }, "404": { "description": "Not Found" } }, "security": [ { "bearerAuth": [] } ], "summary": "Get agent" }, "parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } }, { "in": "path", "name": "agentId", "required": true, "schema": { "format": "uuid", "type": "string" } } ], "put": { "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Update agent" } },
		"/organizations/{orgId}/agents/{agentId}/permissions": { "get": { "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "List rules" }, "parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } }, { "in": "path", "name": "agentId", "required": true, "schema": { "format": "uuid", "type": "string" } } ], "post": { "parameters": [ { "$ref": "#/components/parameters/IdempotencyKey" }, { "$ref": "#/components/parameters/AURAVersion" } ], "responses": { "201": { "description": "Created" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Add rule" } },
		"/organizations/{orgId}/agents/{agentId}/permissions/{ruleId}": { "delete": { "responses": { "204": { "description": "No Content" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Delete rule" }, "parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } }, { "in": "path", "name": "agentId", "required": true, "schema": { "format": "uuid", "type": "string" } }, { "in": "path", "name": "ruleId", "required": true, "schema": { "format": "uuid", "type": "string" } } ] },
		"/organizations/{orgId}/apikeys": { "get": { "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "List API keys" }, "parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } } ], "post": { "parameters": [ { "$ref": "#/components/parameters/IdempotencyKey" }, { "$ref": "#/components/parameters/AURAVersion" } ], "responses": { "201": { "description": "Created" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Create API key" } },
		"/organizations/{orgId}/apikeys/{keyId}": { "delete": { "responses": { "204": { "description": "No Content" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Revoke API key" }, "parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } }, { "in": "path", "name": "keyId", "required": true, "schema": { "format": "uuid", "type": "string" } } ] },
		"/organizations/{orgId}/logs": { "get": { "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "List event logs" }, "parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } } ] },
		"/organizations/{orgId}/webhooks": { "get": { "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "List webhook endpoints" }, "parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } } ], "post": { "parameters": [ { "$ref": "#/components/parameters/IdempotencyKey" }, { "$ref": "#/components/parameters/AURAVersion" } ], "responses": { "201": { "description": "Created" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Create webhook endpoint" } },
		"/organizations/{orgId}/webhooks/{webhookId}": { "delete": { "responses": { "204": { "description": "No Content" }, "401": { "description": "Unauthorized" } }, "security": [ { "bearerAuth": [] } ], "summary": "Delete webhook endpoint" }, "parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } }, { "in": "path", "name": "webhookId", "required": true, "schema": { "format": "uuid", "type": "string" } } ] },
		"/readyz": { "get": { "responses": { "200": { "description": "OK" } }, "summary": "Readiness" } },
		"/v1/verify": { "post": { "parameters": [ { "$ref": "#/components/parameters/AURAVersion" } ], "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/VerifyRequest" } } }, "required": true }, "responses": { "200": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/VerifyResponse" } } }, "description": "OK" }, "401": { "description": "Unauthorized" } }, "security": [ { "apiKeyAuth": [] } ], "summary": "Verify authorization (API key auth)" } },
		"/v2/audit/anchor": { "get": { "responses": { "200": { "description": "OK" }, "404": { "description": "Not Found" } }, "security": [ { "apiKeyAuth": [] } ], "summary": "Get audit anchor (latest or by date)" }, "post": { "requestBody": { "content": { "application/json": { "schema": { "properties": { "date": { "example": "2025-10-29", "type": "string" }, "external_ref": { "example": "https://gist.github.com/...", "type": "string" }, "root_hash": { "type": "string" } }, "required": ["root_hash"], "type": "object" } } }, "required": true }, "responses": { "200": { "description": "OK" } }, "security": [ { "apiKeyAuth": [] } ], "summary": "Set audit anchor" } },
		"/v2/tokens/introspect": { "post": { "requestBody": { "content": { "application/json": { "schema": { "properties": { "mark_used": { "type": "boolean" }, "token": { "type": "string" } }, "required": ["token"], "type": "object" } } }, "required": true }, "responses": { "200": { "description": "OK" } }, "security": [ { "apiKeyAuth": [] } ], "summary": "Validate trust token and return claims" } },
		"/organizations/{orgId}/trust-keys": {
			"parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } } ],
			"get": {
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"keys": { "type": "array", "items": { "$ref": "#/components/schemas/TrustKeyAdmin" } }
									}
								}
							}
						},
						"description": "OK"
					}
				},
				"security": [ { "bearerAuth": [] } ],
				"summary": "List trust keys (admin)"
			},
					"post": {
				"parameters": [ { "$ref": "#/components/parameters/IdempotencyKey" }, { "$ref": "#/components/parameters/AURAVersion" } ],
						"requestBody": {
							"content": { "application/json": { "schema": { "type": "object", "properties": { "kid": { "type": "string" }, "active": { "type": "boolean" } } } } },
					"required": false
				},
				"responses": { "201": { "description": "Created" } },
				"security": [ { "bearerAuth": [] } ],
				"summary": "Create trust key (admin)"
			}
		},
		"/organizations/{orgId}/trust-keys/rotate": {
			"parameters": [ { "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } } ],
					"post": {
				"parameters": [ { "$ref": "#/components/parameters/IdempotencyKey" }, { "$ref": "#/components/parameters/AURAVersion" } ],
						"requestBody": { "content": { "application/json": { "schema": { "type": "object", "properties": { "kid": { "type": "string" }, "grace": { "type": "string", "description": "Duration string e.g. 15m, 2h" }, "grace_seconds": { "type": "integer", "minimum": 1 } } } } }, "required": false },
				"responses": { "201": { "description": "Created" } },
				"security": [ { "bearerAuth": [] } ],
				"summary": "Rotate trust key (admin)"
			}
		},
		"/organizations/{orgId}/trust-keys/{keyId}/activate": {
			"parameters": [
				{ "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } },
				{ "in": "path", "name": "keyId", "required": true, "schema": { "format": "uuid", "type": "string" } }
			],
					"post": {
						"parameters": [ { "$ref": "#/components/parameters/AURAVersion" }, { "in": "query", "name": "exclusive", "required": false, "schema": { "type": "boolean" } }, { "in": "query", "name": "grace", "required": false, "schema": { "type": "string" } }, { "in": "query", "name": "grace_seconds", "required": false, "schema": { "type": "integer", "minimum": 1 } } ],
				"responses": { "200": { "description": "OK" } },
				"security": [ { "bearerAuth": [] } ],
				"summary": "Activate trust key (admin)"
			}
		},
		"/organizations/{orgId}/trust-keys/{keyId}/deactivate": {
			"parameters": [
				{ "in": "path", "name": "orgId", "required": true, "schema": { "format": "uuid", "type": "string" } },
				{ "in": "path", "name": "keyId", "required": true, "schema": { "format": "uuid", "type": "string" } }
			],
			"post": {
				"parameters": [ { "$ref": "#/components/parameters/AURAVersion" } ],
				"responses": { "200": { "description": "OK" } },
				"security": [ { "bearerAuth": [] } ],
				"summary": "Deactivate trust key (admin)"
			}
		}
	}
}
