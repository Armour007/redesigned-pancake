apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aura.fullname" . }}-backend
  labels:
    app.kubernetes.io/name: {{ include "aura.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "aura.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "aura.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: backend
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: http
          envFrom:
            {{- if .Values.configMap.enabled }}
            - configMapRef:
                name: {{ include "aura.fullname" . }}-config
            {{- end }}
            {{- if .Values.secret.enabled }}
            - secretRef:
                name: {{ include "aura.fullname" . }}-secret
            {{- end }}
          env:
            - name: PORT
              value: "{{ .Values.service.port }}"
            {{- range $k, $v := .Values.env }}
            - name: {{ $k }}
              value: "{{ $v }}"
            {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
